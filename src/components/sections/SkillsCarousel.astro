---
// Define tech colors y eliminados los iconos
const techColors = {
    // Frontend
    "React.js": { color: "#61DAFB" },
    JavaScript: { color: "#F7DF1E" },
    TypeScript: { color: "#3178C6" },
    "Front-End Development": { color: "#E44D26" },
    HTML5: { color: "#E34F26" },
    CSS3: { color: "#1572B6" },
    "Tailwind CSS": { color: "#06B6D4" },
    Astro: { color: "#FF5D01" },

    // Backend
    "Node.js": { color: "#339933" },
    "ASP.NET MVC": { color: "#512BD4" },
    "C#": { color: "#512BD4" },
    VBScript: { color: "#0078D7" },
    "Back-End Web Development": { color: "#6c757d" },
    "ASP.NET": { color: "#512BD4" },
    "Entity Framework": { color: "#512BD4" },
    Python: { color: "#3776AB" },
    GraphQL: { color: "#E10098" },
    WebSockets: { color: "#4B32C3" },
    "OPC-UA": { color: "#0078D7" },

    // Other Technologies
    Git: { color: "#F05032" },
    Redis: { color: "#DC382D" },
    Docker: { color: "#2496ED" },
    RabbitMQ: { color: "#FF6600" },
    "REST APIs": { color: "#41BDF5" },
    SQL: { color: "#4479A1" },
    MongoDB: { color: "#47A248" },
    PostgreSQL: { color: "#336791" },
    Sqlite: { color: "#003B57" },
    "Store Procedures": { color: "#4479A1" },

    // Soft Skills
    "SOLID Design Principles": { color: "#FF9800" }, // Orange
    "Design Patterns": { color: "#00B8D9" }, // Cyan
    "Team work": { color: "#43A047" }, // Green
    Collaboration: { color: "#F50057" }, // Pink
    "Agile Methodologies": { color: "#FFD600" }, // Yellow
    "Problem Solving": { color: "#7C4DFF" }, // Purple
    Communication: { color: "#2979FF" }, // Blue
    "Critical Thinking": { color: "#FF3D00" }, // Red
    Leadership: { color: "#00C853" }, // Emerald
};

// Skills data
const skills = [
    {
        category: "Frontend",
        items: [
            "React.js",
            "JavaScript",
            "TypeScript",
            "Front-End Development",
            "HTML5",
            "CSS3",
            "Tailwind CSS",
            "Astro",
        ],
    },
    {
        category: "Backend",
        items: [
            "Node.js",
            "ASP.NET MVC",
            "C#",
            "VBScript",
            "Back-End Web Development",
            "ASP.NET",
            "Entity Framework",
            "Python",
            "GraphQL",
            "WebSockets",
            "OPC-UA",
        ],
    },
    {
        category: "Other Technologies",
        items: [
            "Git",
            "Redis",
            "Docker",
            "RabbitMQ",
            "REST APIs",
            "GraphQL",
            "SQL",
            "MongoDB",
            "PostgreSQL",
            "Sqlite",
            "Store Procedures",
        ],
    },
    {
        category: "Soft Skills",
        items: [
            "SOLID Design Principles",
            "Design Patterns",
            "Team work",
            "Collaboration",
            "Agile Methodologies",
            "Problem Solving",
            "Communication",
            "Critical Thinking",
            "Leadership",
        ],
    },
];

// Preparar todas las skills en un formato para el carrusel
const allSkills = skills.flatMap((group) =>
    group.items.map((skill) => {
        const techColor = techColors[skill as keyof typeof techColors];
        return {
            name: skill,
            category: group.category,
            color: techColor?.color || "#6c757d",
        };
    }),
);

// Crear 4 filas mezclando las habilidades
const rows: Array<
    Array<{
        name: string;
        category: string;
        color: string;
    }>
> = [[], [], [], []];

allSkills.forEach((skill, index) => {
    rows[index % 4].push(skill);
});

// Asegurar que cada fila tenga suficientes elementos para el desplazamiento continuo
const rowsWithDuplicates = rows.map((row) => [...row, ...row]);

const speeds = ["15s", "20s", "18s", "22s"];
const directions = ["normal", "reverse", "normal", "reverse"];
---

<section class="skills-section">
    <h2
        class="section-title mb-12 text-center w-full flex justify-center items-center"
    >
        Skills & <span class="highlighted-text">Technologies</span>
    </h2>
    <div class="skills-carousel-fullwidth">
        <div class="skills-carousel-container">
            {
                rowsWithDuplicates.map((row, rowIndex) => (
                    <div
                        class="skills-row"
                        style={`animation-duration: ${speeds[rowIndex]}; animation-direction: ${directions[rowIndex]};`}
                    >
                        {row.map((skill) => (
                            <div
                                class="skill-badge"
                                style={`--skill-color: ${skill.color};`}
                            >
                                <span class="skill-name">{skill.name}</span>
                            </div>
                        ))}
                    </div>
                ))
            }
        </div>
    </div>
</section>

<style>
    .skills-row {
        will-change: transform;
    }
    .skill-badge {
        will-change: transform, opacity;
    }
</style>
